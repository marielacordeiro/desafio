<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1> Desafio </h1>
    <h3>Por favor abra o console (F12) para interagir com o programa</h3>
    <script>
        getData()

            console.log('Bem vindo, estimado usu√°rio!')
            console.log('Por favor, informe o custo por KM rodado desejado para essa simula√ß√£o (apenas n√∫meros).')
            console.log('Para isso, digite `configurar_custo_por_km(<valor desejado>)`.')
            console.log('Feito isso, escolha o seu trajeto. Para ver uma lista de cidades, digite `todas_cidades`.')
            console.log('Ap√≥s ter escolhido as cidades, fa√ßa `viagem(<cidades>)`, onde <cidades> √© uma string separada por v√≠rgula (exemplo "porto alegre, belo horizonte").')

            let distancias = []
            let todas_cidades = []
            let custo_km = 0; // em reais

            async function getData() {
                const response = await fetch('distancias.csv');
                // promessa para receber todos os dados do arquivo csv 
                const data = await response.text();
                // resposta para a promessa
                todas_cidades = data.split('\n')[0].split(';'); // array com sendo 0: aracaju, 1: belem...
                let table = data.split('\n').slice(1);
                //dividindo as as linhas do arquivo em um array e retirando o [0]
                table.forEach((row, index) => {
                    let columns = [];
                    row.split(';').forEach((distancia, index2) => {
                        columns[todas_cidades[index2]] = distancia; // columns["aracaju"] = 2079, no caso de index = 2
                    });

                    let cidade = todas_cidades[index];
                    distancias[cidade] = columns;
                });
            };

            function _distancia(cidades) {
                let destinos = cidades.split(',').map(x => x.toUpperCase().trim());
                let origem, destino;

                let os_km = 0;
                for (i = 0; i < destinos.length - 1;) {
                    origem = destinos[i]
                    destino = destinos[++i]

                    let nao_existe = false;
                    if (!(origem in distancias)) {
                        console.log("a cidade " + origem + " nao √© v√°lida!!!!!!")
                        nao_existe = true
                    }
                    if (!(destino in distancias)) {
                        console.log("a cidade " + destino + " nao √© v√°lida!!!!!!!!!")
                        nao_existe = true
                    }
                    if (nao_existe) { return null }

                    dist = parseInt(distancias[origem][destino])
                    os_km += dist
                    console.log('indo de ' + origem + ' para dar role em ' + destino + ' e vamo andar ' + dist + 'km')
                }
                return os_km
            };

            function configurar_custo_por_km(custo) {
                custo_km = parseFloat(custo)
            };

            function viagem(cidades) {
                distancia = _distancia(cidades)

                if (distancia === null) { return }

                custo_viagem = parseFloat(custo_km * distancia);
                consumo_de_dinossauros = distancia * 2.57;
                elapsed_dias = distancia / 283;

                console.log(
                    `distancia total: ${distancia}km\n` +
                    `custo: R$${custo_viagem.toFixed(2)}\n` +
                    `consumo ü¶ï: ${consumo_de_dinossauros}L\n` +
                    `tempo em dias: ${Math.floor(elapsed_dias)} dias`,
                );
            };
        
    </script>
</body>
</html>